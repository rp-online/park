{% set uuid = random() %}
{% set gridLayoutLength = 0 %}
{% set alphabet = [
  'a',
  'b',
  'c',
  'd',
  'e',
  'f',
  'g',
  'h',
  'i',
  'j',
  'k',
  'l',
  'm',
  'n',
  'o',
  'p',
  'q',
  'r',
  's',
  't',
  'u',
  'v',
  'w',
  'x',
  'y',
  'z',
] %}
{% if (config.disableAds is not defined or not config.disableAds is same as(true)) and items is defined and items|length %}
  {% if type is not defined or type is same as('slider') %}
    <style>
      {% if widthFractionDesktop is defined and widthFractionDesktop and widthFractionDesktop > 1 %}
      #park-multi-portal-{{ uuid }} {
        width: -webkit-calc((100% / {{ widthFractionDesktop }}) + 2rem);
        width: calc((100% / {{ widthFractionDesktop }}) + 2rem);
        float: right;
      {% if widthFractionDesktop != 1 %}
        margin-left: 0.9375rem;
      {% endif %}
        margin-right: 0;
      }
      {% endif %}
      {% if sliderItemWidthFraction is defined and sliderItemWidthFraction %}
      #park-multi-portal-{{ uuid }} .park-slider__item {
        --slider-item-width-fraction: {{ sliderItemWidthFraction }};
        width: -webkit-calc((100% / {{ sliderItemWidthFraction }}) + 2rem);
        width: calc((100% / {{ sliderItemWidthFraction }}) + 2rem);
      }
      #park-multi-portal-{{ uuid }} .park-slider__item .park-portal:not(.park-portal--is-empty) {
        width: auto;
      }
      {% endif %}
    </style>
    <div role="complementary" id="park-multi-portal-{{ uuid }}"
         class="park-multi-portal park-multi-portal--slider {% set allAdvertorials = true %}
            {% for item in items %}
              {% if item.isAd is not defined or item.isAd is same as(false) %}
                {% set allAdvertorials = false %}
              {% endif %}
            {% endfor %}
          {% if allAdvertorials is same as(true) %}
          park-portal-marker
          {% endif %}">
      {% include 'components/slider/template.twig' with {
        'headline': headline,
        'autoforward': sliderAutoforward,
        'items': items,
        'config': config
      } %}
    </div>
  {% endif %}
  {% if type is same as('grid') %}
    {% set layout = '' %}
    {% set rowCounter = 0 %}
    {% if gridLayout is defined and gridLayout %}
      {% if '1' in gridLayout %}
        {% set gridLayoutRows = gridLayout|split("\\n") %}
        {% set rows = [] %}
        {% for gridLayoutRow in gridLayoutRows %}
          {% set rowCounter = rowCounter + 1 %}
          {% set gridLayoutCells = gridLayoutRow|trim|split(' ') %}
          {% set gridLayoutLength = gridLayoutCells|length %}
          {% set cells = [] %}
          {% for gridLayoutCell in gridLayoutCells %}
            {% set cell = alphabet[(1 * gridLayoutCell - 1)] %}
            {% set cells = cells|merge([cell]) %}
          {% endfor %}
          {% set row = cells|join(' ') %}
          {% set rows = rows|merge([row]) %}
        {% endfor %}
        {% set layout = rows|join('" "') %}
      {% else %}
        {% set layout = gridLayout|replace({"\\n": '" "'}) %}
      {% endif %}
    {% endif %}
    <style>
      {% if widthFractionDesktop is defined and widthFractionDesktop and widthFractionDesktop > 1 %}
      #park-multi-portal-{{ uuid }} {
        width: -webkit-calc((100% / {{ widthFractionDesktop }}) + 2rem);
        width: calc((100% / {{ widthFractionDesktop }}) + 2rem);
        float: right;
      {% if widthFractionDesktop != 1 %}
        margin-left: 0.9375rem;
      {% endif %}
        margin-right: 0;
      }
      {% endif %}
      {% if gridLayout is defined and layout %}

      #park-multi-portal-{{ uuid }} .park-multi-portal__items {
        grid-template-columns: repeat({{ gridLayoutLength }}, 1fr);
        grid-template-areas: "{{ layout|raw }}";
      }
      {% endif %}
    </style>
    <div id="park-multi-portal-{{ uuid }}"
         class="park-portal park-multi-portal park-multi-portal--grid {% set allAdvertorials = true %}
            {% for item in items %}
              {% if item.isAd is not defined or item.isAd is same as(false) %}
                {% set allAdvertorials = false %}
              {% endif %}
            {% endfor %}
          {% if allAdvertorials is same as(true) %}
          park-portal-marker
          {% endif %}"
         role="complementary">
      {% if headline is defined and headline.text is defined and headline.text %}
        <header class="park-slider__header">
          {# The following injects the global config #}
          {% set headline = headline|merge({'config': config}) %}
          {% include 'components/section-headline/template.twig' with headline only %}
        </header>
      {% endif %}
      <ul class="park-multi-portal__items">
        {% for item in items %}
          {% if loop.index <= gridLayoutLength * rowCounter %}
            <li class="park-multi-portal__item" style="grid-area: {{ alphabet[loop.index0] }}">
              {% if item.mobile is defined and item.mobile.type is defined %}
                {% set item = item|merge({
                  'mobile': item.mobile|merge({
                    'type': 'free'
                  })
                }) %}
              {% endif %}
              {% if item.desktop is defined and item.desktop.type is defined %}
                {% set item = item|merge({
                  'desktop': item.desktop|merge({
                    'type': 'free'
                  })
                }) %}
              {% endif %}
              {% set item = item|merge({'config': config}) %}
              {% include 'components/portal/template.twig' with item only %}
            </li>
          {% endif %}
        {% endfor %}
      </ul>
    </div>
  {% endif %}
{% endif %}